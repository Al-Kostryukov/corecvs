/**
 * \file scanner.cpp
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 */

#include <vector>
#include <stddef.h>
#include "scanner.h"

/**
 *  Looks extremely unsafe because it depends on the order of static initialization.
 *  Should check standard if this is ok
 *
 *  Also it's not clear why removing "= Reflection()" breaks the code;
 **/

namespace corecvs {
template<>
Reflection BaseReflection<Scanner>::reflection = Reflection();
template<>
int BaseReflection<Scanner>::dummy = Scanner::staticInit();
} // namespace corecvs 

SUPPRESS_OFFSET_WARNING_BEGIN

int Scanner::staticInit()
{

    ReflectionNaming &nameing = naming();
    nameing = ReflectionNaming(
        "Scanner",
        "Scanner parameters",
        ""
    );
     

    fields().push_back(
        new StringField
        (
          Scanner::PATH_ID,
          offsetof(Scanner, mPath),
          "",
          "path",
          "path",
          "path"
        )
    );
    fields().push_back(
        new StringField
        (
          Scanner::FILETEMPLATE_ID,
          offsetof(Scanner, mFileTemplate),
          "sequence_%04d_c%d.pgm",
          "fileTemplate",
          "fileTemplate",
          "fileTemplate"
        )
    );
   return 0;
}

SUPPRESS_OFFSET_WARNING_END


